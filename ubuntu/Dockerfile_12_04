# todo : https://android.googlesource.com/platform/build/+/master/tools/docker/Dockerfile

# android-build-image with Ubuntu
# https://nathanpfry.com/how-to-setup-ubuntu-18-04-lts-bionic-beaver-to-compile-android-roms/
# https://source.android.com/docs/setup/start/initializing
# https://source.android.com/docs/setup/start/older-versions

FROM docker.io/library/ubuntu:12.04

LABEL maintainer = Julien Milletre Akipe <code.julien@milletre.fr>

ENV \
    # user
    UID=1000 \
    GID=1000 \
    # ccache specifics
    CCACHE_SIZE=50G \
    CCACHE_DIR=/android/ccache \
    USE_CCACHE=1 \
    CCACHE_COMPRESS=1 \
    # java
    JAVA_HOME=/usr/lib/jvm/java-8-openjdk \
    ANDROID_JACK_VM_ARGS="-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4G" \
    # other
    LC_ALL=C

######
### Init Archlinux
######

RUN rm /etc/apt/sources.list \
    && echo "deb http://old-releases.ubuntu.com/ubuntu/ precise main restricted universe multiverse" >> /etc/apt/sources.list \
    && echo "deb http://old-releases.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse" >> /etc/apt/sources.list \
    && echo "deb http://old-releases.ubuntu.com/ubuntu/ precise-security main restricted universe multiverse" >> /etc/apt/sources.list \
    && echo "deb http://old-releases.ubuntu.com/ubuntu/ precise-backports main restricted universe multiverse" >> /etc/apt/sources.list \
    && echo "deb http://old-releases.ubuntu.com/ubuntu/ precise-proposed main restricted universe multiverse" >> /etc/apt/sources.list \
    && cat /etc/apt/sources.list

# Upgrade Archlinux and install devel packages
# RUN sed -i -e 's/archive.ubuntu.com\|security.ubuntu.com/old-releases.ubuntu.com/g' /etc/apt/sources.list \
RUN apt-get update \
    && apt-get dist-upgrade --yes \
    && apt-get -f --yes install \
    # && apt-get remove --yes \
    #     openjdk-* \
    #     icedtea-* \
    && apt-get install --yes \
        cpp \
        g++ \
    && apt-get install --yes \
        # gcc g++ \
        dpkg-dev \
        bc \
        bison \
        build-essential \
        ccache \
        curl \
        flex \
        g++-multilib \
        gcc-multilib \
        git \
        gnupg \
        gperf \
        imagemagick \
        lib32ncurses5-dev \
        lib32readline-dev \
        lib32z-dev \
        lib32z1-dev \
        # liblz4-tool \
        libc6-dev-i386 \
        libgl1-mesa-dev \
        libncurses5 \
        libncurses5-dev \
        libsdl1.2-dev \
        libssl-dev \
        libwxgtk2.8-dev \
        libx11-dev \
        libxml2 \
        libxml2-utils \
        pngcrush \
        python-pip \
        python-virtualenv \
        python3-dev \
        # python3-pip \
        lzop \
        rsync \
        schedtool \
        squashfs-tools \
        sudo \
        unzip \
        x11proto-core-dev \
        xsltproc \
        zip \
        zlib1g-dev \
        libx11-dev:i386 \
        libreadline6-dev:i386 \
        libgl1-mesa-glx:i386 \
        mingw32 \
        tofrodos \
        python-markdown \
        zlib1g-dev:i386 \
        software-properties-common \
        python-software-properties \
        # openjdk-8-jdk \
        # openjdk-7-jdk
    && apt-get install --yes --no-install-recommends openjdk-7-jdk \
    && add-apt-repository ppa:openjdk-r/ppa --yes \
    && apt-get update \
    && apt-get dist-upgrade -y \
    && apt-get install openjdk-8-jre openjdk-8-jdk-headless openjdk-8-jdk -f --yes
    # && ln -s /usr/lib/i386-linux-gnu/mesa/libGL.so.1 /usr/lib/i386-linux-gnu/libGL.so
        
RUN curl http://commondatastorage.googleapis.com/git-repo-downloads/repo > /usr/bin/repo \
    && chmod a+x /usr/bin/repo

RUN ln -s /usr/lib/i386-linux-gnu/mesa/libGL.so.1 /usr/lib/i386-linux-gnu/libGL.so

# RUN pip install virtualenv

######
### Create user
######

RUN groupadd --gid $GID --force builder \
    && useradd --gid $GID --uid $UID --non-unique builder \
    && mkdir /home/builder \
    && chown -R builder:builder /home/builder \
    && echo "builder ALL=NOPASSWD: ALL" > /etc/sudoers.d/builder


######
### Android build tools
######

# Create working directory
RUN mkdir /android \
    && chown -R builder:builder /android

WORKDIR /android

# Configure Python version
RUN virtualenv --system-site-packages venv
#    && ln -s /usr/lib/python2.7/* /android/venv/lib/python2.7/ \
#    && source venv/bin/activate

COPY ./entrypoint.sh /

RUN chmod +x /entrypoint.sh \
    && chown -R builder:builder /entrypoint.sh

USER builder

CMD /entrypoint.sh
